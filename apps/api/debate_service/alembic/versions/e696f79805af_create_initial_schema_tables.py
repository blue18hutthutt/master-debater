"""create initial schema tables

Revision ID: e696f79805af
Revises: 
Create Date: 2025-05-11 15:12:26.657890

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e696f79805af'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('debate_formats',
    sa.Column('format_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('phases', sa.String(), nullable=False),
    sa.Column('turn_limits', sa.String(), nullable=True),
    sa.Column('structure', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('format_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('llm_configs',
    sa.Column('config_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('base_prompt', sa.Text(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('other_params', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('config_id')
    )
    op.create_table('scoring_criteria',
    sa.Column('criteria_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('max_score', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('criteria_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('is_llm', sa.Boolean(), nullable=False),
    sa.Column('llm_config_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['llm_config_id'], ['llm_configs.config_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('debates',
    sa.Column('debate_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('proposition', sa.Text(), nullable=False),
    sa.Column('format', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('moderator_id', sa.String(), nullable=False),
    sa.Column('time_limit_minutes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['moderator_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('debate_id')
    )
    op.create_table('debate_participants',
    sa.Column('participant_id', sa.String(), nullable=False),
    sa.Column('debate_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('side', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['debate_id'], ['debates.debate_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('participant_id'),
    sa.UniqueConstraint('debate_id', 'user_id', name='unique_participant')
    )
    op.create_table('debate_scores',
    sa.Column('score_id', sa.String(), nullable=False),
    sa.Column('debate_id', sa.String(), nullable=False),
    sa.Column('judge_id', sa.String(), nullable=False),
    sa.Column('verdict_summary', sa.Text(), nullable=True),
    sa.Column('winner_side', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['debate_id'], ['debates.debate_id'], ),
    sa.ForeignKeyConstraint(['judge_id'], ['debate_participants.participant_id'], ),
    sa.PrimaryKeyConstraint('score_id'),
    sa.UniqueConstraint('debate_id', 'judge_id', name='unique_judge_score')
    )
    op.create_table('debate_turns',
    sa.Column('turn_id', sa.String(), nullable=False),
    sa.Column('debate_id', sa.String(), nullable=False),
    sa.Column('participant_id', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('turn_number', sa.Integer(), nullable=False),
    sa.Column('phase', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['debate_id'], ['debates.debate_id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['debate_participants.participant_id'], ),
    sa.PrimaryKeyConstraint('turn_id'),
    sa.UniqueConstraint('debate_id', 'turn_number', name='unique_turn_number')
    )
    op.create_table('llm_memory',
    sa.Column('memory_id', sa.String(), nullable=False),
    sa.Column('participant_id', sa.String(), nullable=False),
    sa.Column('debate_id', sa.String(), nullable=False),
    sa.Column('memory_key', sa.String(), nullable=False),
    sa.Column('memory_value', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['debate_id'], ['debates.debate_id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['debate_participants.participant_id'], ),
    sa.PrimaryKeyConstraint('memory_id'),
    sa.UniqueConstraint('participant_id', 'debate_id', 'memory_key', name='unique_memory_key')
    )
    op.create_table('criteria_scores',
    sa.Column('criteria_score_id', sa.String(), nullable=False),
    sa.Column('score_id', sa.String(), nullable=False),
    sa.Column('criteria_id', sa.String(), nullable=False),
    sa.Column('score_value', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['criteria_id'], ['scoring_criteria.criteria_id'], ),
    sa.ForeignKeyConstraint(['score_id'], ['debate_scores.score_id'], ),
    sa.PrimaryKeyConstraint('criteria_score_id'),
    sa.UniqueConstraint('score_id', 'criteria_id', name='unique_criteria_score')
    )
    op.create_table('debate_checkpoints',
    sa.Column('checkpoint_id', sa.String(), nullable=False),
    sa.Column('debate_id', sa.String(), nullable=False),
    sa.Column('last_turn_id', sa.String(), nullable=False),
    sa.Column('checkpoint_data', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['debate_id'], ['debates.debate_id'], ),
    sa.ForeignKeyConstraint(['last_turn_id'], ['debate_turns.turn_id'], ),
    sa.PrimaryKeyConstraint('checkpoint_id')
    )
    op.create_table('moderator_comments',
    sa.Column('comment_id', sa.String(), nullable=False),
    sa.Column('debate_id', sa.String(), nullable=False),
    sa.Column('turn_id', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('comment_type', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['debate_id'], ['debates.debate_id'], ),
    sa.ForeignKeyConstraint(['turn_id'], ['debate_turns.turn_id'], ),
    sa.PrimaryKeyConstraint('comment_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('moderator_comments')
    op.drop_table('debate_checkpoints')
    op.drop_table('criteria_scores')
    op.drop_table('llm_memory')
    op.drop_table('debate_turns')
    op.drop_table('debate_scores')
    op.drop_table('debate_participants')
    op.drop_table('debates')
    op.drop_table('users')
    op.drop_table('scoring_criteria')
    op.drop_table('llm_configs')
    op.drop_table('debate_formats')
    # ### end Alembic commands ###
